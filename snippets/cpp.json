{
    "cp": {
        "prefix": "cp",
        "body": [
            "#include <cstddef>",
            "#include <ostream>",
            "#define DEBUG 0",
            "#include <algorithm>",
            "#include <cassert>",
            "#include <cmath>",
            "#include <cstring>",
            "#include <iostream>",
            "#include <string>",
            "using namespace std;",
            "using str = string;",
            "using ll = long long;",
            "using ull = unsigned long long;",
            "#define endl \"\\n\"",
            "",
            "/* rep */",
            "#define fori(x, y) for (ll i = x; i <= y; ++i)",
            "#define fore(x, y) for (ll i = x; i < y; ++i)",
            "/* rep ends */",
            "",
            "/* vector is life saver */",
            "#define vi vector<int>",
            "#define vll vector<long long>",
            "#define vs vector<string>",
            "#define vpii vector<pair<int, int>>",
            "#define vpll vector<pair<long, long>>",
            "#define vpss vector<pair<string, string>>",
            "#define pb(x) push_back(x)",
            "#define eb(x) emplace_back(x)",
            "/* vector ends */",
            "",
            "/* pair starts */",
            "#define pii pair<int, int>",
            "#define pll pair<long, long>",
            "#define p2l2l pair<long long, long long>",
            "#define pss pair<string, string>",
            "/* pair ends */",
            "",
            "/* map is the savior */",
            "#define mii map<int, int>",
            "#define mll map<long, long>",
            "#define m2l2l map<long long, long long>",
            "#define mss map<string, string>",
            "#define mis map<int, string>",
            "#define msi map<string, int>",
            "#define mls map<long, string>",
            "#define m2ls map<long long, string>",
            "#define msl map<string, long>",
            "#define ms2l map<string, long long>",
            "/* map ends */",
            "",
            "/* std magics */",
            "#define ub(x, y) upper_bound(all(x), y)",
            "#define lb(x, y) lower_bound(all(x), y)",
            "#define all(x) x.begin(), x.end()",
            "#define allr(x) x.rbegin(), x.rend()",
            "#define exists(needle, heystack) (heystack.find(needle) != heystack.end())",
            "/* std magics end */",
            "",
            "/* debug stuff */",
            "#define deb(x) cout << #x << \"->\" << x << endl;",
            "#define dv(x) \\",
            "  cout << \"====Debugging vector [\" << #x << \"]====\\n\"; \\",
            "  for (auto &i : x) { \\",
            "    cout << i << \" \"; \\",
            "  } \\",
            "  cout << endl;",
            "#define dm2l2l(x) \\",
            "  cout << \"====Debugging map [\" << #x << \"]====\\n\"; \\",
            "  for (auto &[key, val] : x) { \\",
            "    cout << key << \" --> \" << val << endl; \\",
            "  }",
            "/* debug ends */",
            "",
            "/* utility functions start */",
            "ull power(ull x, ull y) {",
            "  ull ans = 1;",
            "  while (y) {",
            "    if (y & 1)",
            "      ans *= x;",
            "    x *= x;",
            "    y >>= 1;",
            "  }",
            "  return ans;",
            "}",
            "",
            "template <typename T> T sum(T n) { return n * (n + 1) / 2; }",
            "",
            "template <typename T, typename FN>",
            "pair<T, T> binary_search_classic(T low, T high, FN fn) {",
            "  while (low <= high) {",
            "    T mid = (low + high) / 2;",
            "    if (fn(mid))",
            "      low = mid + 1;",
            "    else",
            "      high = mid - 1;",
            "  }",
            "  return {low, high};",
            "}",
            "/* utility functions end */",
            "",
            "// set TEST to 0 if test cases are not required",
            "#define TEST 1",
            "",
            "void solve() {",
            "\t$0",
            "}",
            "",
            "int main() {",
            "#ifndef ONLINE_JUDGE",
            "  freopen(\"input.txt\", \"r\", stdin);",
            "  freopen(\"output.txt\", \"w\", stdout);",
            "  freopen(\"error.txt\", \"w\", stderr);",
            "#endif",
            "",
            "  ios_base::sync_with_stdio(false);",
            "  cin.tie(NULL);",
            "",
            "#if TEST == 1",
            "  int t;",
            "  cin >> t;",
            "  while (t--)",
            "#endif",
            "    solve();",
            "}"
        ],
        "description": "C++ competitive programming template"
    }
}
